<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szjc.OrderManag.dao.StockinfoMapper">
  <resultMap id="BaseResultMap" type="com.szjc.OrderManag.bean.Stockinfo">
    <id column="ID" jdbcType="NVARCHAR" property="id" />
    <result column="inventoryid" jdbcType="NVARCHAR" property="inventoryid" />
    <result column="nums" jdbcType="INTEGER" property="nums" />
    <result column="types" jdbcType="NVARCHAR" property="types" />
    <result column="creatuser" jdbcType="NVARCHAR" property="creatuser" />
    <result column="creattime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="orderno" jdbcType="NVARCHAR" property="orderno" />
    <result column="inventorycode" jdbcType="NVARCHAR" property="inventorycode" />
    <result column="inventoryname" jdbcType="NVARCHAR" property="inventoryname" />
    <result column="speci" jdbcType="NVARCHAR" property="speci" />
    <result column="personname" jdbcType="NVARCHAR" property="personname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, inventoryid, nums, types, creatuser, creattime, orderno
  </sql>
  <select id="selectByExample" parameterType="com.szjc.OrderManag.bean.StockinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stockinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stockinfo
    where ID = #{id,jdbcType=NVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from stockinfo
    where ID = #{id,jdbcType=NVARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.szjc.OrderManag.bean.StockinfoExample">
    delete from stockinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.szjc.OrderManag.bean.Stockinfo">
    insert into stockinfo (ID, inventoryid, nums, 
      types, creatuser, creattime,
      orderno)
    values (#{id,jdbcType=NVARCHAR}, #{inventoryid,jdbcType=NVARCHAR}, #{nums,jdbcType=INTEGER}, 
      #{types,jdbcType=NVARCHAR}, #{creatuser,jdbcType=NVARCHAR},#{creattime,jdbcType=TIMESTAMP},
      #{orderno,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szjc.OrderManag.bean.Stockinfo">
    insert into stockinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="inventoryid != null">
        inventoryid,
      </if>
      <if test="nums != null">
        nums,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="creatuser != null">
        creatuser,
      </if>
      <if test="creattime != null">
        creattime,
      </if>
      <if test="orderno != null">
        orderno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NVARCHAR},
      </if>
      <if test="inventoryid != null">
        #{inventoryid,jdbcType=NVARCHAR},
      </if>
      <if test="nums != null">
        #{nums,jdbcType=INTEGER},
      </if>
      <if test="types != null">
        #{types,jdbcType=NVARCHAR},
      </if>
      <if test="creatuser != null">
        #{creatuser,jdbcType=NVARCHAR},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderno != null">
        #{orderno,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.szjc.OrderManag.bean.StockinfoExample" resultType="java.lang.Long">
    select count(*) from stockinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stockinfo
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NVARCHAR},
      </if>
      <if test="record.inventoryid != null">
        inventoryid = #{record.inventoryid,jdbcType=NVARCHAR},
      </if>
      <if test="record.nums != null">
        nums = #{record.nums,jdbcType=INTEGER},
      </if>
      <if test="record.types != null">
        types = #{record.types,jdbcType=NVARCHAR},
      </if>
      <if test="record.creatuser != null">
        creatuser = #{record.creatuser,jdbcType=NVARCHAR},
      </if>
      <if test="record.creattime != null">
        creattime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderno != null">
        orderno = #{record.orderno,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stockinfo
    set ID = #{record.id,jdbcType=NVARCHAR},
      inventoryid = #{record.inventoryid,jdbcType=NVARCHAR},
      nums = #{record.nums,jdbcType=INTEGER},
      types = #{record.types,jdbcType=NVARCHAR},
      creatuser = #{record.creatuser,jdbcType=NVARCHAR},
      creattime = #{record.creattime,jdbcType=TIMESTAMP},
      orderno = #{record.orderno,jdbcType=NVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.szjc.OrderManag.bean.Stockinfo">
    update stockinfo
    <set>
      <if test="inventoryid != null">
        inventoryid = #{inventoryid,jdbcType=NVARCHAR},
      </if>
      <if test="nums != null">
        nums = #{nums,jdbcType=INTEGER},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=NVARCHAR},
      </if>
      <if test="creatuser != null">
        creatuser = #{creatuser,jdbcType=NVARCHAR},
      </if>
      <if test="creattime != null">
        creattime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderno != null">
        orderno = #{orderno,jdbcType=NVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=NVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szjc.OrderManag.bean.Stockinfo">
    update stockinfo
    set inventoryid = #{inventoryid,jdbcType=NVARCHAR},
      nums = #{nums,jdbcType=INTEGER},
      types = #{types,jdbcType=NVARCHAR},
      creatuser = #{creatuser,jdbcType=NVARCHAR},
      creattime = #{creattime,jdbcType=TIMESTAMP},
      orderno = #{orderno,jdbcType=NVARCHAR}
    where ID = #{id,jdbcType=NVARCHAR}
  </update>

  <select id="searchStockinfo" parameterType="com.szjc.OrderManag.bean.Stockinfo" resultMap="BaseResultMap">
SELECT sto.ID
,sto.types
,sto.orderno
,sto.nums
,sto.inventoryid
,sto.creatuser
,sto.creattime
,ino.inventorycode
,ino.inventoryname
,ino.speci
,ufo.personname
FROM stockinfo sto
left join inventoryinfo ino on sto.inventoryid = ino.ID
left join userinfo ufo on sto.creatuser = ufo.UID
 where ino.inventorycode like  '%${quickSearch}%'  or ino.inventoryname  like  '%${quickSearch}%' or sto.ID like '%${quickSearch}%'
 order BY sto.creattime DESC
  </select>
  <select id="searchStockstatus" parameterType="com.szjc.OrderManag.bean.Stockinfo" resultMap="BaseResultMap">
SELECT

  sto.inventoryid
  ,ino.inventorycode
  ,ino.inventoryname
  ,ino.speci
  ,sum(sto.nums) nums

  FROM stockinfo sto
  left join inventoryinfo ino on sto.inventoryid = ino.ID
  left join userinfo ufo on sto.creatuser = ufo.UID
 where ino.inventorycode like  '%${quickSearch}%'  or ino.inventoryname  like  '%${quickSearch}%' or ino.speci like '%${quickSearch}%' or  sto.inventoryid like '%${quickSearch}%'
   GROUP BY
	 sto.inventoryid
  ,ino.inventorycode
  ,ino.inventoryname
  ,ino.speci

  </select>


</mapper>